# generated by datamodel-codegen:
#   filename:  https://raw.githubusercontent.com/eda-labs/openapi/v25.4.1/apps/aaa.eda.nokia.com/v1alpha1/aaa.json

from __future__ import annotations
from typing import Annotated, Dict, List, Literal, Optional
from pydantic import BaseModel, Field, RootModel


class NodeGroup(BaseModel):
    """
    NodeGroup is the Schema for the nodegroups API
    """

    apiVersion: str
    kind: str
    metadata: NodeGroupMetadata
    spec: Annotated[
        Spec,
        Field(
            description="NodeGroup is a representation of a group on a node, including the services it has access to, any RBAC, and TACACS configuration.\nNodeGroups are deployed to nodes by NodeUser or other permission-consuming resources.",
            title="Specification",
        ),
    ]
    status: Annotated[
        Optional[Status],
        Field(description="Deployment status of this NodeGroup.", title="Status"),
    ] = None


class NodeGroupDeletedResourceEntry(BaseModel):
    commitTime: Optional[str] = None
    hash: Optional[str] = None
    name: Optional[str] = None
    namespace: Optional[str] = None
    transactionId: Optional[int] = None


class NodeGroupDeletedResources(RootModel[List[NodeGroupDeletedResourceEntry]]):
    root: List[NodeGroupDeletedResourceEntry]


class NodeGroupList(BaseModel):
    """
    NodeGroupList is a list of nodegroups
    """

    apiVersion: str
    items: Optional[List[NodeGroup]] = None
    kind: str


class NodeGroupMetadata(BaseModel):
    annotations: Optional[Dict[str, str]] = None
    labels: Optional[Dict[str, str]] = None
    name: Annotated[
        str,
        Field(
            max_length=253,
            pattern="^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
        ),
    ]
    namespace: str


class Rule(BaseModel):
    action: Annotated[
        Literal["Deny", "ReadWrite", "Read"],
        Field(description="Set the action for this entry.", title="Action"),
    ]
    match: Annotated[
        Optional[str],
        Field(
            description='Set the match for this entry. This is a string to match input against - for example "interface" for srl or "configure port" for sros.\nRules here should be specified in the target specific format.',
            title="Match",
        ),
    ] = None
    operatingSystem: Annotated[
        Literal["srl", "sros"],
        Field(
            description="Operating system to match against for this rule.\nOperating system to deploy this rule to.",
            title="Operating System",
        ),
    ]


class Spec(BaseModel):
    """
    NodeGroup is a representation of a group on a node, including the services it has access to, any RBAC, and TACACS configuration.
    NodeGroups are deployed to nodes by NodeUser or other permission-consuming resources.
    """

    groupName: Annotated[
        Optional[str],
        Field(
            description="Set the local name for this group. If not provided, the resource name will be used.",
            title="Group Name",
        ),
    ] = None
    rules: Annotated[
        Optional[List[Rule]], Field(description="Rules for this group.", title="Rules")
    ] = None
    services: Annotated[
        List[
            Literal[
                "CLI",
                "FTP",
                "GNMI",
                "GNOI",
                "GNSI",
                "GRIBI",
                "Reflection",
                "JSON-RPC",
                "NETCONF",
            ]
        ],
        Field(description="Enabled services for this group", title="Services"),
    ]
    superuser: Annotated[
        Optional[bool],
        Field(description="Make members of this group superusers.", title="Superuser"),
    ] = None
    tacacs: Annotated[
        Optional[Tacacs], Field(description="TACACS configuration.", title="TACACS")
    ] = None


class Status(BaseModel):
    """
    Deployment status of this NodeGroup.
    """

    nodes: Annotated[
        Optional[List[str]],
        Field(
            description="List of TopoNodes group has been deployed to.", title="Nodes"
        ),
    ] = None


class Tacacs(BaseModel):
    """
    TACACS configuration.
    """

    privilegeLevel: Annotated[
        Optional[int],
        Field(
            description="Set the privilege level for this group.",
            ge=0,
            le=15,
            title="Privilege Level",
        ),
    ] = None
