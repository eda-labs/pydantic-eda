# generated by datamodel-codegen:
#   filename:  https://raw.githubusercontent.com/eda-labs/openapi/v25.4.1/apps/bootstrap.eda.nokia.com/v1alpha1/bootstrap.json

from __future__ import annotations
from typing import Annotated, Any, Dict, List, Optional
from pydantic import BaseModel, Field, RootModel


class Init(BaseModel):
    """
    Init is the Schema for the inits API
    """

    apiVersion: str
    kind: str
    metadata: InitMetadata
    spec: Annotated[
        Spec,
        Field(
            description="InitSpec defines the desired state of Init",
            title="Specification",
        ),
    ]
    status: Annotated[
        Optional[Dict[str, Any]],
        Field(
            description="InitStatus defines the observed state of Init", title="Status"
        ),
    ] = None


class InitDeletedResourceEntry(BaseModel):
    commitTime: Optional[str] = None
    hash: Optional[str] = None
    name: Optional[str] = None
    namespace: Optional[str] = None
    transactionId: Optional[int] = None


class InitDeletedResources(RootModel[List[InitDeletedResourceEntry]]):
    root: List[InitDeletedResourceEntry]


class InitList(BaseModel):
    """
    InitList is a list of inits
    """

    apiVersion: str
    items: Optional[List[Init]] = None
    kind: str


class InitMetadata(BaseModel):
    annotations: Optional[Dict[str, str]] = None
    labels: Optional[Dict[str, str]] = None
    name: Annotated[
        str,
        Field(
            max_length=253,
            pattern="^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
        ),
    ]
    namespace: str


class ManagementRouter(BaseModel):
    """
    ManagementRouter is the Schema for the managementrouters API
    """

    apiVersion: str
    kind: str
    metadata: ManagementRouterMetadata
    spec: Annotated[
        SpecModel,
        Field(
            description="ManagementRouterSpec defines the desired state of ManagementRouter",
            title="Specification",
        ),
    ]
    status: Annotated[
        Optional[Dict[str, Any]],
        Field(
            description="ManagementRouterStatus defines the observed state of ManagementRouter",
            title="Status",
        ),
    ] = None


ManagementRouterDeletedResourceEntry = InitDeletedResourceEntry


class ManagementRouterDeletedResources(
    RootModel[List[ManagementRouterDeletedResourceEntry]]
):
    root: List[ManagementRouterDeletedResourceEntry]


class ManagementRouterList(BaseModel):
    """
    ManagementRouterList is a list of managementrouters
    """

    apiVersion: str
    items: Optional[List[ManagementRouter]] = None
    kind: str


ManagementRouterMetadata = InitMetadata


class Mgmt(BaseModel):
    """
    Optional management interface settings.
    Allows setting DHCP clients or static IPs as well as
    the IP MTU.
    """

    ipMTU: Annotated[
        Optional[int],
        Field(description="Set the management interface IP MTU.", title="IP MTU"),
    ] = None
    ipv4DHCP: Annotated[
        Optional[bool],
        Field(description="Enable IPv4 DHCP client.", title="IPv4 DHCP Client"),
    ] = None
    ipv6DHCP: Annotated[
        Optional[bool],
        Field(description="Enable IPv6 DHCP client.", title="IPv6 DHCP Client"),
    ] = None
    staticRoutes: Annotated[
        Optional[List[StaticRoute]],
        Field(
            description="Optional list of static routes to add to the management network instance as part of the initial configuration.",
            title="Static Routes",
        ),
    ] = None


class Spec(BaseModel):
    """
    InitSpec defines the desired state of Init
    """

    commitSave: Annotated[
        Optional[bool],
        Field(
            description="Save a startup configuration after each commit.",
            title="Commit Save",
        ),
    ] = None
    mgmt: Annotated[
        Optional[Mgmt],
        Field(
            description="Optional management interface settings.\nAllows setting DHCP clients or static IPs as well as\nthe IP MTU.",
            title="Mgmt",
        ),
    ] = None
    nodeSelector: Annotated[
        Optional[List[str]],
        Field(
            description="Optional node selectors to perform initial configuration for.\nIf not provided initialization is performed for all nodes.",
            title="Node Selector",
        ),
    ] = None


class SpecModel(BaseModel):
    """
    ManagementRouterSpec defines the desired state of ManagementRouter
    """

    nodeSelector: Annotated[
        Optional[List[str]],
        Field(
            description="Selects TopoNodes on which to configure the management VRF. When left empty, all TopoNodes are selected.",
            title="Node Selector",
        ),
    ] = None
    nodes: Annotated[
        Optional[List[str]],
        Field(
            description="List of TopoNodes on which to configure the management VRF. When left empty, all TopoNodes are selected.",
            title="Nodes",
        ),
    ] = None


class StaticRoute(BaseModel):
    nextHop: Annotated[
        Optional[str], Field(description="Static route next hop.", title="Next Hop")
    ] = None
    prefix: Annotated[
        Optional[str], Field(description="Static route prefix.", title="Prefix")
    ] = None
